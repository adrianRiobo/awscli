#!/bin/bash

# Usage ecrcredentials $AWS-region-id $ecrlogin $ecrtoken
# Output will be formatted as:
# $ecrlogin: file containing ecr login
# $ecrtoken: file containing ecr token

# This script is intended to be used within EKS IAM integration 
# in order to get credentials from an assumed role (ECR role)
# as pre requisites the container should be executed by a service account
# with a linked IAM role
# Info: https://aws.amazon.com/blogs/opensource/introducing-fine-grained-iam-roles-service-accounts/

# AWS EKS / K8S SA integration will populate these ENV:
#
# AWS_ROLE_ARN
# AWS_WEB_IDENTITY_TOKEN_FILE

# Get Parameters
AWS_REGION=$1
ECRLOGIN=$2
ECRTOKEN=$3

# Generate random sessio-name
SESSION_NAME=$(cat /dev/urandom | tr -dc 'a-zA-Z0-9' | fold -w 10 | head -n 1)

# Assume role
aws sts assume-role-with-web-identity \
    --role-arn $AWS_ROLE_ARN \
    --role-session-name $SESSION_NAME \
    --web-identity-token file://$AWS_WEB_IDENTITY_TOKEN_FILE \
    --duration-seconds 1000 > /tmp/credentials

# Set Credentials
export AWS_ACCESS_KEY_ID=$(cat /tmp/credentials | jq -r ".Credentials.AccessKeyId")
export AWS_SECRET_ACCESS_KEY=$(cat /tmp/credentials | jq -r ".Credentials.SecretAccessKey")
export AWS_SESSION_TOKEN=$(cat /tmp/credentials | jq -r ".Credentials.SessionToken")

# Get ECR Credentials
ECR_LOGIN=$(aws ecr --region eu-west-1 get-login | awk '{print substr($4,1)}')
ECR_TOKEN=$(aws ecr --region eu-west-1 get-login | awk '{print substr($6,1)}')

# Save outputs
cat $ECR_LOGIN | tee $ECRLOGIN 
cat $ECR_TOKEN | tee $ECRTOKEN

# Clean up
rm /tmp/credentials


